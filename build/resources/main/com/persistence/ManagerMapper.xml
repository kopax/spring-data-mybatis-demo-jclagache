<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.repository.ManagerRepository">
    <!--<cache />-->

    <resultMap id="managerResultMap" type="com.domain.Manager">
        <id property="id" column="id"/>
        <result property="login" column="login"/>
        <result property="roleList" column="roleList" typeHandler="com.typeHandler.RoleListTypeHandler" />
    </resultMap>


    <sql id="getManagerSelect">
        SELECT
        manager.`ID` as 'id',
        manager.`LOGIN` as 'login',
        manager.`ROLES` as 'roleList'
    </sql>

    <sql id="getManagerFrom">
        FROM
        `MANAGER` manager
    </sql>

    <select id="count" resultType="java.lang.Long" parameterType="Integer">
        SELECT COUNT(ID)
        <include refid="getManagerFrom"/>
    </select>

    <select id="exists" resultType="java.lang.Boolean" parameterType="Integer">
        SELECT COUNT(ID)
        <include refid="getManagerFrom"/>
        WHERE
        ID = #{id};
    </select>


    <select id="find" resultMap="managerResultMap" parameterType="Integer">
        <include refid="getManagerSelect"/>
        <include refid="getManagerFrom"/>
        <if test="pk">
            WHERE manager.`ID` = #{pk.value}
        </if>
    </select>

    <!--<select id="findOne" resultType="com.domain.Manager" parameterType="Integer">-->
        <!--<include refid="getManagerSelect"/>-->
        <!--<include refid="getManagerFrom"/>-->
        <!--WHERE-->
        <!--manager.`ID` = #{id}-->
    <!--</select>-->

    <!--<select id="findAll" resultType="com.domain.Manager">-->
        <!--<include refid="getManagerSelect"/>-->
        <!--<include refid="getManagerFrom"/>-->
    <!--</select>-->

    <insert id="save" parameterType="com.domain.Manager" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        INSERT INTO `MANAGER`
        (`LOGIN`, `ROLES`)
        VALUES
        (#{login}, #{roleList})
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <update id="update" parameterType="com.domain.Manager">
        UPDATE
        `MANAGER`
        SET
        `LOGIN` = #{login},
        `ROLES` = #{roleList}
        WHERE
        `ID` = #{id}
    </update>

    <delete id="delete" parameterType="com.domain.Manager">
        DELETE FROM
        `MANAGER`
        WHERE
        `ID` = #{id}
    </delete>

</mapper>